
  0%|                                                                                                                                                                                                                                                                           | 0/9000 [00:00<?, ?it/s]
0.0004
  0%|                                                                                                                                                                                                                                                                           | 0/9000 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "emb_train.py", line 178, in <module>
    trainer.train_by_num_epoch(args.num_epochs)
  File "/home/clay/userdata/title_generation/emb_trainer.py", line 92, in train_by_num_epoch
    loss_value, loss_dict = self._train_by_single_batch(batch, reg_abc_loss=None, reg_ttl_loss=None)
  File "/home/clay/userdata/title_generation/emb_trainer.py", line 157, in _train_by_single_batch
    loss, loss_dict = self.get_loss_pred_from_single_batch(batch)
  File "/home/clay/userdata/title_generation/emb_trainer.py", line 332, in get_loss_pred_from_single_batch
    emb2 = self.ttl_model(title.to(self.device))
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/clay/userdata/title_generation/emb_model.py", line 109, in forward
    return self.layer(x)
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (5654x768 and 1536x512)