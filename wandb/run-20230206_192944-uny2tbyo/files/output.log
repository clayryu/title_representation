
0.0004
  0%|                                                                                                                                                                                                                                                          | 0/9000 [00:00<?, ?it/s]
  0%|                                                                                                                                                                                                                                                          | 0/9000 [00:03<?, ?it/s]
Traceback (most recent call last):
  File "emb_train.py", line 167, in <module>
    trainer.train_by_num_epoch(args.num_epochs)
  File "/home/clay/userdata/title_generation/emb_trainer.py", line 89, in train_by_num_epoch
    loss_value, loss_dict = self._train_by_single_batch(batch, reg_abc_loss=None, reg_ttl_loss=None)
  File "/home/clay/userdata/title_generation/emb_trainer.py", line 153, in _train_by_single_batch
    loss, loss_dict = self.get_loss_pred_from_single_batch(batch)
  File "/home/clay/userdata/title_generation/emb_trainer.py", line 327, in get_loss_pred_from_single_batch
    emb1 = self.abc_model(melody.to(self.device), measure_numbers.to(self.device))
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/clay/userdata/title_generation/emb_model.py", line 179, in forward
    emb = self._get_embedding(input_seq)
  File "/home/clay/userdata/title_generation/emb_model.py", line 172, in _get_embedding
    emb = PackedSequence(self.emb(input_seq[0]), input_seq[1], input_seq[2], input_seq[3])
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/clay/userdata/title_generation/emb_model.py", line 21, in forward
    return torch.cat([module(x[..., i]) for i, module in enumerate(self.layers)], dim=-1)
  File "/home/clay/userdata/title_generation/emb_model.py", line 21, in <listcomp>
    return torch.cat([module(x[..., i]) for i, module in enumerate(self.layers)], dim=-1)
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/modules/sparse.py", line 158, in forward
    return F.embedding(
  File "/home/clay/.local/lib/python3.8/site-packages/torch/nn/functional.py", line 2199, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: CUDA error: no kernel image is available for execution on the device